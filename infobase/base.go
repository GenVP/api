package infobase

type Common struct {

	// имя пользователя;
	Usr string `v8:"Usr, equal_sep, optional" json:"user"`

	// пароль;
	Pwd string `v8:"Pwd, equal_sep, optional" json:"password"`

	// разрешить получение клиентских лицензий через сервер "1С:Предприятия" ("Y"|"N").
	//  "Y" — получать клиентскую лицензию через сервер "1С:Предприятия".
	//  	Если клиентское приложение не получило программную лицензию
	//  	или аппаратную лицензию из локального ключа HASP или из сетевого ключа HASP,
	//  	то производится попытка получения клиентской лицензии через сервер 1С:Предприятия.
	//  "N" — не получать клиентскую лицензию через сервер "1С:Предприятия".
	//
	//  Значение по умолчанию — "N".
	LicDstr bool `v8:"LicDstr, equal_sep, optional, bool_true=Y" json:"lic_dstr"`

	//	установка разделителей.
	//
	//	ZN=<Общий реквизит 1>,<Общий реквизит 2>,...,<Общий реквизит N>
	//
	//	<Общий реквизит> = [<+>|<->]<значение общего реквизита>
	//
	//	[<+>|<->] - признак использования: "+" (по умолчанию) - реквизит используется; "-" - не используется;
	//	Если разделитель не используется, то перед значением должен быть "-".
	//	Если первым символом в значении разделителя содержится символ "+" или "-", то при указании его нужно удваивать.
	//	<значение общего реквизита> - значение общего реквизита. Если в значении разделителя присутствует запятая,
	//	то при указании ее нужно удваивать.
	//	Если значение разделителя пропущено, но разделитель должен использоваться, то используется символ "+".
	//	Разделители разделяются запятой.
	//	Например:
	//	"Zn=-ПервыйРазделитель,+,---ТретийРазделитель", что означает:
	//	Первый разделитель выключен, значение – "ПервыйРазделитель",
	//	Второй разделитель включен, значение – пустая строка,
	//	Третий разделитель выключен, значение – "-ТретийРазделитель".
	Zn DatabaseSeparatorList `v8:"ZN, equal_sep, optional" json:"zn"`

	// запуск в режиме привилегированного сеанса.
	// Разрешен аутентифицированному пользователю, имеющему административные права.
	// Журнал регистрации фиксирует установку или отказ в возможности установки режима привилегированного сеанса.
	// prmod=1 - привилегированный сеанс устанавливается.
	Prmod bool `v8:"Prmod, equal_sep, optional, bool_true=1" json:"prmod"`
}

func (ib Common) Auth() (user, password string) {
	return ib.Usr, ib.Pwd
}

func (ib Common) DatabaseSeparator() DatabaseSeparatorList {
	return ib.Zn
}

func (ib Common) WithAuth(user, pass string) Common {

	if len(user) == 0 {
		return ib
	}

	return Common{
		Usr:     user,
		Pwd:     pass,
		LicDstr: ib.LicDstr,
		Zn:      ib.Zn,
		Prmod:   ib.Prmod,
	}
}
