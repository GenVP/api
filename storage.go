package v8runner

//import "./v8storage"
//
//// ConfigurationRepositoryCreate
//func (conf *конфигуратор) СоздатьХранилищеКонфигурации(ПутьКХранилищю string, Пользователь string, Пароль string, ДополнительныеПараметры ...string) (storage *ХранилищеКонфигурации, err error) {
//
//	ХранилищеКонфигурации := v8storage.НовоеХранилищеКонфигурации(conf, ПутьКХранилищю, Пользователь, Пароль)
//
//	err = ХранилищеКонфигурации.СоздатьХранилищеКонфигурации(ДополнительныеПараметры...)
//
//	return
//}
//
//// ConfigurationRepositoryBindCfg
//func (conf *конфигуратор) ПодключитьсяКХранилищюКонфигурации(ПутьКХранилищю string, Пользователь string, Пароль string, ИгнорироватьНаличиеПодключеннойБД bool, ЗаменитьКонфигурациюБД bool) (storage *ХранилищеКонфигурации, err error) {
//
//	ХранилищеКонфигурации := v8storage.НовоеХранилищеКонфигурации(conf, ПутьКХранилищю, Пользователь, Пароль)
//
//	err = ХранилищеКонфигурации.ПодключитьсяКХранилищюКонфигурации(ИгнорироватьНаличиеПодключеннойБД, ЗаменитьКонфигурациюБД)
//
//	return
//}
